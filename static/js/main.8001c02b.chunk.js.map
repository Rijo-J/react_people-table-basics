{"version":3,"sources":["components/NavButton/NavButton.tsx","components/Navigation/Navigation.tsx","components/NotFoundPage/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["NavElement","children","slug","split","filter","word","map","toLowerCase","join","className","isActive","cn","to","Navigation","role","NotFoundPage","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","sex","name","PeopleTable","isLoading","hasLoadingError","displayedPeople","match","useMatch","activeSlug","params","getPersonByName","find","length","fatherName","motherName","born","died","mother","father","PeoplePage","useState","setIsLoading","setHasLoadingError","setDisplayedPeople","useEffect","catch","finally","App","path","element","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.8001c02b.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  children: string,\n};\n\nexport const NavElement: React.FC<Props> = ({ children }) => {\n  const slug = (children)\n    .split(' ')\n    .filter(word => word)\n    .map(word => word.toLowerCase())\n    .join('-');\n\n  return (\n    <NavLink\n      className={({ isActive }) => cn(\n        'navbar-item is-capitalized',\n        { 'has-background-grey-lighter': isActive },\n      )}\n      to={`/${slug === 'home'\n        ? ''\n        : slug}`}\n    >\n      {children}\n    </NavLink>\n  );\n};\n","import { NavElement } from '../NavButton';\n\nexport const Navigation = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavElement>Home</NavElement>\n        <NavElement>People</NavElement>\n        <NavElement>No page</NavElement>\n      </div>\n    </div>\n  </nav>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  person,\n}) => {\n  const {\n    sex,\n    slug,\n    name,\n  } = person;\n\n  return (\n    <Link\n      className={cn({\n        'has-text-danger': sex === 'f',\n      })}\n      to={`/people/${slug}`}\n    >\n      {name}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport { useMatch } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  isLoading: boolean,\n  hasLoadingError: boolean,\n  displayedPeople: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  isLoading,\n  hasLoadingError,\n  displayedPeople,\n}) => {\n  const match = useMatch('/people/:slug');\n  const activeSlug = match?.params.slug;\n\n  const getPersonByName = (name: string | null) => {\n    return displayedPeople\n      .find(person => person.name === name);\n  };\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (hasLoadingError) {\n    return (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong\n      </p>\n    );\n  }\n\n  if (!displayedPeople.length) {\n    return (\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n    );\n  }\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {displayedPeople.map((person) => {\n          const {\n            fatherName,\n            motherName,\n            slug,\n            sex,\n            born,\n            died,\n          } = person;\n          const mother = getPersonByName(motherName);\n          const father = getPersonByName(fatherName);\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={\n                cn({ 'has-background-warning': slug === activeSlug })\n              }\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n\n              <td>\n                {mother?.slug\n                  ? <PersonLink person={mother} />\n                  : <p>{motherName || '-'}</p>}\n              </td>\n\n              <td>\n                {father?.slug\n                  ? <PersonLink person={father} />\n                  : <p>{fatherName || '-'}</p>}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n  const [displayedPeople, setDisplayedPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    getPeople()\n      .then(setDisplayedPeople)\n      .catch(() => setHasLoadingError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"box table-container\">\n        <PeopleTable\n          isLoading={isLoading}\n          hasLoadingError={hasLoadingError}\n          displayedPeople={displayedPeople}\n        />\n      </div>\n    </div>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\n\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <h1 className=\"title\">Home Page</h1>\n            }\n          />\n          <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n          <Route\n            path=\"/people\"\n            element={<PeoplePage />}\n          />\n          <Route\n            path=\"/people/:slug\"\n            element={<PeoplePage />}\n          />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}